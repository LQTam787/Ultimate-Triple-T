/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author lqtam
 */
public class Subboard extends JPanel {
    /**
     *
     */
    protected Board bigBoard;
    /**
     *
     */
    protected Board[] subBoards;
    /**
     *
     */
    protected int curr;
    /**
     *
     */
    protected String player;

    /**
     * Creates new form Subboard
     */
    public Subboard() {
        this.bigBoard = new Board();
        this.subBoards = new Board[9];
        this.curr = 4;
        this.player = "X";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        Positions = new JButton[9];

        setBackground(new Color(0, 0, 0));
        setForeground(new Color(255, 255, 255));
        setFont(new Font("Times New Roman", 1, 12)); // NOI18N
        setPreferredSize(new Dimension(148, 148));
        setLayout(new GridLayout(3, 3, 4, 4));

        for (int i = 0; i < 9; i++) {
            final int pos = i;
            Positions[pos].setFont(new Font("Tahoma", 1, 12)); // NOI18N
            Positions[pos].setHorizontalTextPosition(SwingConstants.CENTER);
            Positions[pos].addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent evt) {
                    PositionsActionPerformed(curr, pos, evt);
                }
            });
            add(Positions[pos]);
        }
    }// </editor-fold>                        

    private void  PositionsActionPerformed(int curr, int pos, ActionEvent evt) {                                         
        // TODO add your handling code here:
        if (subBoards[curr].validMove(pos)) {
            subBoards[curr].move(pos, player);
        }

        if (subBoards[curr].checkWin() == 3) {
    		bigBoard.move(curr, "-");
    	} else if (subBoards[curr].checkWin() != 0) {
    		bigBoard.move(curr, player);
    	}

        if (player.equals("X")) {
    		player = "O";
    	} else {
    		player = "X";
    	}
        
    	curr = pos;
    }                                        


    // Variables declaration - do not modify                     
    protected JButton[] Positions;
    // End of variables declaration                   
}
